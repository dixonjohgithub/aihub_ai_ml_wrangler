version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aihub-postgres-dev
    environment:
      POSTGRES_DB: aihub_ml_wrangler
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aihub-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aihub-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aihub-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: aihub-backend-dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/aihub_ml_wrangler
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
      - ENV=development
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aihub-network

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: aihub-celery-worker-dev
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/aihub_ml_wrangler
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
      - ENV=development
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aihub-network

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: aihub-celery-beat-dev
    command: celery -A app.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/aihub_ml_wrangler
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
      - ENV=development
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aihub-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: aihub-frontend-dev
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
      - "3001:3001"  # HMR port
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - aihub-network

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  aihub-network:
    driver: bridge